stages:
  - build_and_test
  - deploy

variables:
  BUILD_NAME: Ares
  UNITY_ACTIVATION_FILE: ./unity3d.alf
  UNITY_VERSION: "2021.2.11f1"
  IMAGE: unityci/editor # https://hub.docker.com/r/unityci/editor
  IMAGE_VERSION: "1.0" # https://github.com/game-ci/docker/releases
  UNITY_DIR: $CI_PROJECT_DIR # this needs to be an absolute path. Defaults to the root of your tree.


image: $IMAGE:$UNITY_VERSION-base-$IMAGE_VERSION

.unity_before_script: &unity_before_script
  before_script:
    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh

.cache: &cache
  cache:
    key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$TEST_PLATFORM"
    paths:
      - $UNITY_DIR/Library/

.license: &license
  rules:
    - if: '$UNITY_LICENSE != null'
      when: always

# run this job when you need to request a license
# you may need to follow activation steps from documentation
get-activation-file:
  rules:
    - if: '$UNITY_LICENSE == null'
      when: manual
  stage: build_and_test
  script:
    - chmod +x ./ci/get_activation_file.sh && ./ci/get_activation_file.sh
  artifacts:
    paths:
      - $UNITY_ACTIVATION_FILE
    expire_in: 10 min # Expiring this as artifacts may contain sensitive data and should not be kept public

.test: &test
  stage: build_and_test
  <<: *unity_before_script
  <<: *cache
  <<: *license
  script:
    - chmod +x ./ci/test.sh && ./ci/test.sh
  artifacts:
    when: always
    expire_in: 2 weeks
  coverage: /<Linecoverage>(.*?)</Linecoverage>/

test-playmode:
  <<: *test
  variables:
    TEST_PLATFORM: playmode

test-editmode:
  <<: *test
  variables:
    TEST_PLATFORM: editmode

.build: &build
  stage: build_and_test
  <<: *unity_before_script
  <<: *cache
  <<: *license
  script:
    - chmod +x ./ci/build.sh && ./ci/build.sh
  artifacts:
    paths:
      - $UNITY_DIR/Builds/

build-StandaloneLinux64:
  <<: *build
  variables:
    BUILD_TARGET: StandaloneLinux64

build-StandaloneOSX:
  <<: *build
  image: $IMAGE:$UNITY_VERSION-mac-mono-$IMAGE_VERSION
  variables:
    BUILD_TARGET: StandaloneOSX

build-StandaloneWindows64:
  <<: *build
  image: $IMAGE:$UNITY_VERSION-windows-mono-$IMAGE_VERSION
  variables:
    BUILD_TARGET: StandaloneWindows64

#build-WebGL:
#  <<: *build
#  image: $IMAGE:$UNITY_VERSION-webgl-$IMAGE_VERSION
#  variables:
#    BUILD_TARGET: WebGL
    
pages:
  image: alpine:latest
  stage: deploy
  script:
    - mv "$UNITY_DIR/Builds/WebGL/${BUILD_NAME}" public
  artifacts:
    paths:
      - public
  only:
    - master

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always
